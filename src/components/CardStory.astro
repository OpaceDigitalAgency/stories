---
import RatingStars from './RatingStars.astro';
import TagBadge from './TagBadge.astro';
import type { CardStoryProps } from '../types/components';

const { story, className = '' } = Astro.props as CardStoryProps;

// Ensure story object exists
if (!story) {
  console.error('Story object is undefined or null');
  return;
}

// Handle both publishedAt and publishDate for compatibility
// Ensure we have a valid date or default to current date
const publishDate = story.publishedAt || story.publishDate || new Date();

// Safely format the date with error handling
let formattedDate = '';
try {
  // Ensure publishDate is a valid date string or object before formatting
  formattedDate = new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(publishDate instanceof Date ? publishDate : new Date(publishDate));
} catch (error) {
  console.error('Error formatting date:', error);
  formattedDate = 'Publication date unavailable';
}
---

<article class={`card group h-full flex flex-col transform-style-3d ${className}`}>
  <a href={`/stories/${story.slug}`} class="block relative overflow-hidden rounded-2xl perspective-1000">
    <!-- Image overlay gradient -->
    <div class="absolute inset-0 bg-gradient-to-t from-primary/40 via-primary/10 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-500 z-10"></div>
    <div class="relative aspect-video overflow-hidden rounded-2xl">
      <img
        src={typeof story.coverImage === 'string' ? story.coverImage : story.coverImage?.url || '/images/default-cover.jpg'}
        alt={`Cover image for ${story.title}`}
        class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
      />
      <!-- Decorative elements -->
      <div class="absolute top-4 right-4 bg-white/80 backdrop-blur-sm rounded-full p-2 shadow-soft opacity-0 group-hover:opacity-100 transform translate-y-4 group-hover:translate-y-0 transition-all duration-300">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-primary">
          <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25" />
        </svg>
      </div>
    </div>
  </a>
  
  <div class="p-4 flex-grow flex flex-col relative">
    <!-- Content background gradient -->
    <div class="absolute inset-0 bg-gradient-to-br from-white to-neutral-50/80 rounded-2xl animate-gradient"></div>
    
    <div class="relative flex justify-between items-start mb-4">
      <div class="flex-1">
        <a href={`/stories/${story.slug}`} class="block group">
          <h3 class="text-xl font-display font-bold text-text-primary group-hover:text-primary transition-colors mb-1">{story.title}</h3>
        </a>
        <div class="flex items-center text-sm text-text-light mb-2">
          <span>{formattedDate}</span>
          <span class="mx-2">â€¢</span>
          <RatingStars rating={story.rating || 0} />
        </div>
      </div>
    </div>
    
    <p class="text-text-secondary mb-4 line-clamp-3 flex-grow">{story.excerpt}</p>
    
    <div class="flex flex-wrap gap-2 mb-4">
      {story.tags && Array.isArray(story.tags) && story.tags.map(tag => <TagBadge tag={tag} />)}
    </div>
    
    {story.author && (
      <div class="flex items-center pt-4 border-t border-neutral-100 mt-auto relative">
        <a href={`/authors/${story.author.slug || '#'}`} class="flex items-center group">
          <div class="relative">
            <img
              src={typeof story.author.avatar === 'string' ? story.author.avatar : story.author.avatar?.url || '/images/default-avatar.jpg'}
              alt={story.author.name || 'Author'}
              class="w-10 h-10 rounded-full border-2 border-white shadow-soft object-cover"
            />
            <!-- Decorative element -->
            <span class="absolute inset-0 rounded-full border-2 border-primary scale-0 group-hover:scale-110 opacity-0 group-hover:opacity-100 transition-all duration-300"></span>
          </div>
          <span class="ml-2 font-medium text-text-secondary group-hover:text-primary transition-colors">
            {story.author.name || 'Anonymous'}
          </span>
        </a>
      </div>
    )}
  </div>
</article>
