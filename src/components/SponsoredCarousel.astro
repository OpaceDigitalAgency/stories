---
// Sponsored Carousel Component
// This component displays a carousel of sponsored stories with tinted backgrounds

import CardStory from './CardStory.astro';
import SponsoredBadge from './SponsoredBadge.astro';

interface Props {
  title: string;
  viewAllLink: string;
  stories: any[];
  carouselId: string;
}

const { title, viewAllLink, stories, carouselId } = Astro.props;

// Mock data for sponsored stories if not provided
const sponsoredStories = stories.length > 0 ? stories : [
  {
    title: "The Enchanted Forest",
    excerpt: "Discover the magical creatures that live in the Enchanted Forest and follow Emma's quest to save their home from destruction.",
    coverImage: "https://images.unsplash.com/photo-1448375240586-882707db888b",
    author: {
      name: "David Brown",
      avatar: "https://i.pravatar.cc/150?img=4",
      slug: "david-brown"
    },
    rating: 4.6,
    tags: ["Fantasy", "Nature", "Adventure"],
    slug: "enchanted-forest",
    publishDate: new Date('2025-03-10'),
    sponsored: true
  },
  {
    title: "The Little Robot's Big Day",
    excerpt: "Beep the robot learns about friendship and emotions when he ventures outside his factory for the first time.",
    coverImage: "https://images.unsplash.com/photo-1485827404703-89b55fcc595e",
    author: {
      name: "Jennifer Lee",
      avatar: "https://i.pravatar.cc/150?img=5",
      slug: "jennifer-lee"
    },
    rating: 4.8,
    tags: ["Technology", "Friendship", "Children"],
    slug: "little-robot-big-day",
    publishDate: new Date('2025-04-05'),
    sponsored: true
  },
  {
    title: "Ocean Friends: The Dolphin's Secret",
    excerpt: "Dive into an underwater adventure with Maya as she befriends a dolphin who shows her the wonders of the ocean.",
    coverImage: "https://images.unsplash.com/photo-1547054728-ea081f1f795f",
    author: {
      name: "Emma Thompson",
      avatar: "https://i.pravatar.cc/150?img=1",
      slug: "emma-thompson"
    },
    rating: 4.4,
    tags: ["Ocean", "Animals", "Adventure"],
    slug: "ocean-friends-dolphin-secret",
    publishDate: new Date('2025-03-22'),
    sponsored: true
  }
];
---

<section class="section section-sponsored py-12 relative overflow-hidden">
  <!-- Enhanced background elements -->
  <div class="absolute -top-32 -right-32 w-[32rem] h-[32rem] bg-tertiary-200/30 rounded-full blur-3xl animate-blob transform translate-z-12"></div>
  <div class="absolute -bottom-32 -left-32 w-[32rem] h-[32rem] bg-tertiary-100/30 rounded-full blur-3xl animate-blob animation-delay-2000 transform translate-z-8"></div>
  
  <div class="container relative z-10">
    <div class="flex justify-between items-center mb-6">
      <div class="flex items-center">
        <h2 class="text-2xl md:text-3xl font-display font-bold text-text-primary mr-3">{title}</h2>
        <SponsoredBadge type="sponsored" />
      </div>
      <a href={viewAllLink} class="text-secondary font-bold hover:text-secondary/80 transition-all duration-300 hover:translate-x-1 flex items-center group">
        <span>View All</span>
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5 ml-1 transform group-hover:translate-x-1 transition-transform">
          <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
        </svg>
      </a>
    </div>
    
    <!-- Carousel container -->
    <div class="relative">
      <!-- Carousel navigation buttons -->
      <button
        id={`${carouselId}-prev`}
        class="absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-2 z-10 bg-white/90 hover:bg-white text-tertiary w-12 h-12 rounded-full flex items-center justify-center shadow-playful focus:outline-none focus:ring-2 focus:ring-tertiary/50 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300 hover:scale-110"
        aria-label="Previous stories"
      >
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5">
          <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
        </svg>
      </button>
      
      <div 
        id={carouselId} 
        class="carousel-container overflow-x-auto pb-4 hide-scrollbar"
      >
        <div class="carousel-track flex gap-4 transition-transform duration-500 ease-out">
          {sponsoredStories.map(story => (
            <div class="carousel-item flex-shrink-0 w-full sm:w-1/2 md:w-1/3 lg:w-1/4">
              <div class="relative">
                <div class="absolute top-2 right-2 z-10">
                  <SponsoredBadge type="sponsored" size="sm" />
                </div>
                <CardStory {...story} />
              </div>
            </div>
          ))}
        </div>
      </div>
      
      <button
        id={`${carouselId}-next`}
        class="absolute right-0 top-1/2 transform -translate-y-1/2 translate-x-2 z-10 bg-white/90 hover:bg-white text-tertiary w-12 h-12 rounded-full flex items-center justify-center shadow-playful focus:outline-none focus:ring-2 focus:ring-tertiary/50 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300 hover:scale-110"
        aria-label="Next stories"
      >
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5">
          <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
        </svg>
      </button>
    </div>
  </div>
</div>

<style>
  .hide-scrollbar {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
  }
  
  .hide-scrollbar::-webkit-scrollbar {
    display: none;  /* Chrome, Safari and Opera */
  }
</style>

<script define:vars={{ carouselId }}>
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.getElementById(carouselId);
    const track = container.querySelector('.carousel-track');
    const items = container.querySelectorAll('.carousel-item');
    const prevButton = document.getElementById(`${carouselId}-prev`);
    const nextButton = document.getElementById(`${carouselId}-next`);
    
    let currentIndex = 0;
    const itemsPerView = window.innerWidth < 640 ? 1 : 
                         window.innerWidth < 768 ? 2 : 
                         window.innerWidth < 1024 ? 3 : 4;
    
    const maxIndex = Math.max(0, items.length - itemsPerView);
    
    // Initial button state
    updateButtonState();
    
    // Event listeners for buttons
    prevButton.addEventListener('click', () => {
      if (currentIndex > 0) {
        currentIndex--;
        updateCarousel();
      }
    });
    
    nextButton.addEventListener('click', () => {
      if (currentIndex < maxIndex) {
        currentIndex++;
        updateCarousel();
      }
    });
    
    // Update carousel position
    function updateCarousel() {
      const itemWidth = items[0].offsetWidth + 24; // width + gap
      track.style.transform = `translateX(-${currentIndex * itemWidth}px)`;
      updateButtonState();
    }
    
    // Update button disabled state
    function updateButtonState() {
      prevButton.disabled = currentIndex === 0;
      nextButton.disabled = currentIndex >= maxIndex;
      
      prevButton.style.opacity = currentIndex === 0 ? '0.5' : '1';
      nextButton.style.opacity = currentIndex >= maxIndex ? '0.5' : '1';
    }
    
    // Handle window resize
    window.addEventListener('resize', () => {
      const newItemsPerView = window.innerWidth < 640 ? 1 : 
                             window.innerWidth < 768 ? 2 : 
                             window.innerWidth < 1024 ? 3 : 4;
      
      if (newItemsPerView !== itemsPerView) {
        // Reset position if the number of visible items changes
        currentIndex = 0;
        updateCarousel();
      }
    });
  });
</script>