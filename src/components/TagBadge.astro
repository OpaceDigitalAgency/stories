---
import type { TagBadgeProps } from '../types/components';

interface ExtendedTagBadgeProps extends TagBadgeProps {
  size?: 'sm' | 'md' | 'lg';
  clickable?: boolean;
}

const {
  tag,
  className = '',
  size = 'md',
  clickable = true
} = Astro.props as ExtendedTagBadgeProps;

// Size classes with better padding
const sizeClasses: Record<'sm' | 'md' | 'lg', string> = {
  sm: 'text-xs px-2 py-1',
  md: 'text-xs px-2 py-1',
  lg: 'text-xs px-2 py-1'
};

// Use consistent purple styling for all tags
const colorClass = 'bg-purple-100 text-purple-700';
const baseClasses = "inline-flex items-center rounded-full font-semibold transition-all duration-500 transform-style-3d";
const hoverClasses = clickable ? "hover:translate-z-4 hover:scale-110 hover:shadow-xl cursor-pointer group" : "";
const classes = `${baseClasses} ${sizeClasses[size]} ${colorClass} ${hoverClasses} ${className}`;

// Format tag for URL (lowercase, replace spaces with hyphens)
const tagSlug = tag.toLowerCase().replace(/\s+/g, '-');
---

{clickable ? (
  <a href={`/tags/${tagSlug}`} class={classes} data-tag={tag}>
    <span class="relative z-10">{tag}</span>
    <div class="absolute inset-0 bg-gradient-to-r from-current/0 via-current/30 to-current/0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-full animate-shimmer"></div>
    <div class="absolute inset-0 bg-white/10 rounded-full scale-0 group-hover:scale-125 opacity-0 group-hover:opacity-100 transition-all duration-500 blur-sm"></div>
    <div class="absolute inset-0 bg-current/5 rounded-full scale-0 group-hover:scale-150 opacity-0 group-hover:opacity-100 transition-all duration-500 blur-lg"></div>
  </a>
) : (
  <span class={classes} data-tag={tag}>
    <span class="relative z-10">{tag}</span>
  </span>
)}